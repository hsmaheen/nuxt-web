version: 2
jobs:
  front_build_and_test:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "front/package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            cd front
            npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "front/package.json" }}
      - run:
          name: Run tests
          command: |
            cd front
            npm test
      - store_test_results:
          path: test-results
  front_deploy_to_staging:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: 'nuxt-web-app'
      - GOOGLE_PROJECT_ID: 'nuxt-web-app'
      - GOOGLE_COMPUTE_ZONE: 'asia-southeast1'
      - GOOGLE_CLUSTER_NAME: 'nuxt-web-app-cluster'
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            cd front
            apt-get install -qq -y gettext
            echo $GCLOUD_SVC_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker:
          version: 18.06.0-ce
      - run:
          name: Docker build and push
          command: |
            cd front
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t ${PROJECT_NAME} .
            docker tag ${PROJECT_NAME} asia.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://asia.gcr.io
            docker push asia.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
      - run:
          name: Deploy to Kubernetes
          command: |
            envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
            kubectl apply -f ${HOME}/patched_k8s.yml
            kubectl rollout status deployment/${PROJECT_NAME}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - front_build_and_test
      - front_deploy_to_staging:
          requires:
            - front_build_and_test
          filters:
            branches:
              only: staging
